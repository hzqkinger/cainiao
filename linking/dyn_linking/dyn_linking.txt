1  目前大多数包括Linux在内的开源操作系统都遵守一个叫做FHS的标准，这个标准规定了一个系统中的系统文件应该如何存放，包括各个目录的结构，组织和作用,
这有利于促进各个开源操作系统之间的兼容。

2  FHS规定，一个系统中主要有三个放共享库的位置：
/lib  这个位置主要存放系统最关键和基础的共享库
/usr/lib  这个目录下主要保存的是一些非系统运行是所需的关键性的库
/usr/local/lib  这个主要存放第三方的应用程序的库

3.	动态链接的基本思想是把程序按照模块拆分为各个相对独立部分，在程序运行时才将它们链接在一起形成一个完整的程序，
而不是像静态链接一样把所有的程序模块都链接成一个单独的可执行文件。
	动态链接涉及运行时的链接及多个文件的装载，必须要有操作系统的支持，因为动态链接的情况下，进程的虚拟地址空间的分布会比静态链接情况下更为复杂，
还有一些存储管理，内存共享，进程线程等机制在动态链接下也会有一些微妙的变化。
	目前主流的操作系统几乎都支持动态链接这种方式。
	在使用动态链接库的情况下，程序本身被分为了程序主要模块和动态链接库
	在Linux中，常用的C语言库的运行库glibc，其文件名叫"libc.so"。整个系统中只保留一份c语言的动态链接文件"libc.so"，而所有的c语言编写的，动态链接的程序
都可以在运行时使用它。
	当程序被装载的时候，系统的动态链接器会将程序所需要的所有动态链接库装载到进程的地址空间，并且将程序中所有未决议的符号绑定到相应的动态链接库中，并
进行重定位工作。
	程序与libc.so之间真正的链接工作是由动态链接器完成的，而不是由静态链接器ld完成的。
